<!doctype html>
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]>    <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]>    <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]>    <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--> <html lang="en" class="no-js"> <!--<![endif]-->
<head>
			<meta charset="utf-8">
	<meta name="google-site-verification" content="XzhxEv9n6_QIITfsjN1nNssRwvQ2stqTz70CuXeu-94">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
	<meta name="HandheldFriendly" content="True">
	<meta name="MobileOptimized" content="320">
	<meta name="viewport" content="initial-scale=1.0; user-scalable=yes;">
	<meta name="p:domain_verify" content="4fcf9878caa9f2ce8dbe0b8162fcb9c5"/>
	<script type="text/javascript">var NREUMQ=NREUMQ||[];NREUMQ.push(["mark","firstbyte",new Date().getTime()]);</script><base href="https://www.binpress.com/" />
	<script>(function(H){H.className=H.className.replace(/\bno-js\b/,'js')})(document.documentElement)</script>
		<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/themes/ui-lightness/jquery-ui.css" type="text/css" media="all" />
		<link href="/min/?b=styles&amp;f=fonts/css/binpress.css,reset.css,main.css,handheld.css,form.css,markdown.css,site/main.css,site/content.css,site/components.css&amp;v=f319ecf" rel="stylesheet" type="text/css" /><link href="/min/?b=styles&amp;f=site/comments.css,site/tutorials.css,prettify.css&amp;v=f319ecf" rel="stylesheet" type="text/css" />	<!--[if IE 7 ]>
	<link rel="stylesheet" href="styles/fonts/css/binpress-ie7.css" type="text/css" media="all" />
	<script src="//html5shim.googlecode.com/svn/trunk/html5.js"></script>
	<![endif]-->
	    <meta property="og:type" content="website" />
<meta property="og:url" content="http://www.binpress.com/tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123" />
<meta property="og:image" content="http://www.binpress.com/images/logo/open-graph.png" />
<meta property="og:site_name" content="Binpress" />
<meta property="fb:admins" content="617568869,537023091" />
<meta property="fb:app_id" content="172491746142461" />
<meta name="description" content="Get started making a city sim game from scratch with open source code and the first installment of this ten part tutorial series. Build houses and shops, lay roads, and more!" />
<meta property="og:description" content="Get started making a city sim game from scratch with open source code and the first installment of this ten part tutorial series. Build houses and shops, lay roads, and more!" />
<meta property="og:title" content="Creating a City Building Game with SFML Part 1: State Manager | C/C++" />		<script type="text/javascript">var baseUrl ='';</script>
		<script type="text/javascript">
	  var _gaq = _gaq || [];
var pluginUrl = '//www.google-analytics.com/plugins/ga/inpage_linkid.js';
	  _gaq.push(['_require', 'inpage_linkid', pluginUrl]);
	  _gaq.push(['_setAccount', 'UA-2024380-7']);
	  _gaq.push(['_setDomainName', '.binpress.com']);
	  _gaq.push(['_setSiteSpeedSampleRate', 100]);
	  _gaq.push(['_trackPageview']);
	  _gaq.push(['_setCustomVar', 1, 'User-type','Visitor', 2]);
	  setTimeout('_gaq.push([\'_trackEvent\', \'NonBounced\', \'Over 20 seconds\'])',20000);
	
	  (function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	  
	</script>	<link href='//fonts.googleapis.com/css?family=Roboto+Condensed:400,300|Oxygen:300,400,700|Lato:300,400,700,900|Merriweather:300,400,700,900' rel='stylesheet' type='text/css'>
	
	<link href="https://plus.google.com/115913168422804876359" rel="publisher" />
	<link rel="shortcut icon" href="https://www.binpress.com/images/favicon.ico" type="image/x-icon">	<title>Creating a City Building Game with SFML Part 1: State Manager - Tutorial - Binpress</title></head>
<body>
	<div id="container">
		<div id="header">
	<div class="width">

		<div class="nav">
			<div class="links-wrap">
				<div class="links">
					<a href="blog"><span>Blog</span></a>
					<a href="browse"><span>Marketplace</span></a>
										<a href="features/store"><span>Features</span></a>
					<a href="pricing"><span>Pricing</span></a>
					<a href="contact"><span>Contact</span></a>
															<a href="login"><span>Login</span></a>
									</div>
			</div>
						
								<a class="button" href="register">Create your store</a>
										<a class="show-menu icon-menu button"></a>
		</div>
		<a id="logo" href="/" title="Homepage - Binpress"><img src="images/homepage/logo.png" alt="Binpress" />
			<br /><small>Your own digital store</small></a>
	</div>
</div>
		<div id="body" class="width">
			<div class="tutorial">
	<ul class="tutorials-nav">
	<li>
		<span class="title"><i class="icon-code"></i>Languages</span>
		<ul>
						<li><a href="tutorials?language=c" class="selected"><small>(12)</small>C/C++</a></li>
						<li><a href="tutorials?language=csharp"><small>(4)</small>C#</a></li>
						<li><a href="tutorials?language=go"><small>(1)</small>Go</a></li>
						<li><a href="tutorials?language=java"><small>(10)</small>Java</a></li>
						<li><a href="tutorials?language=javascript"><small>(14)</small>JavaScript</a></li>
						<li><a href="tutorials?language=lua"><small>(1)</small>Lua</a></li>
						<li><a href="tutorials?language=objective-c"><small>(77)</small>Objective-C</a></li>
						<li><a href="tutorials?language=php"><small>(8)</small>PHP</a></li>
						<li><a href="tutorials?language=python"><small>(10)</small>Python</a></li>
						<li><a href="tutorials?language=ruby"><small>(1)</small>Ruby</a></li>
						<li><a href="tutorials?language=swift"><small>(3)</small>Swift</a></li>
					</ul>
	</li>

	<li>
		<span class="title"><i class="icon-list-bullet"></i>Tags</span>
		<ul>
						<li><a href="tutorials?tag=ios"><small>(77)</small>ios</a></li>
						<li><a href="tutorials?tag=objective-c"><small>(71)</small>objective-c</a></li>
						<li><a href="tutorials?tag=os+x"><small>(65)</small>os x</a></li>
						<li><a href="tutorials?tag=game+development"><small>(16)</small>game development</a></li>
						<li><a href="tutorials?tag=games"><small>(13)</small>games</a></li>
						<li><a href="tutorials?tag=iPhone"><small>(13)</small>iPhone</a></li>
						<li><a href="tutorials?tag=c%2B%2B"><small>(11)</small>c++</a></li>
						<li><a href="tutorials?tag=video+games"><small>(11)</small>video games</a></li>
						<li><a href="tutorials?tag=gaming"><small>(11)</small>gaming</a></li>
						<li><a href="tutorials?tag=android"><small>(11)</small>android</a></li>
					</ul>
	</li>
</ul>	<div class="one-col">
		<h1>Creating a City Building Game with SFML Part 1: State Manager</h1>
		<div class="meta">
			<a href="tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123#comments" class="grey-button icon-comment-1 addcomment">
								2							</a>
			<span class="avatar tiniest"><img src="developers/35620/phpc4y1lY-tiniest.jpg" alt="" /></span>			<a href="profile/daniel-mansfield/35620">Daniel Mansfield</a>
				
							<span class="time">Aug 8, 2014</span>
									
		</div>
		
		
		<div class="tags">
			<a href="tutorials?language=c"><i class="icon-code"></i>C/C++</a><a href="tutorials?framework=sfml"><i class="icon-code"></i>SFML</a><a href="tutorials?category=gamedev"><i class="icon-code"></i>Game Development</a><a href="tutorials?tag=c%2B%2B"><i class="icon-list-bullet"></i>c++</a><a href="tutorials?tag=game+development"><i class="icon-list-bullet"></i>game development</a><a href="tutorials?tag=games"><i class="icon-list-bullet"></i>games</a><a href="tutorials?tag=gaming"><i class="icon-list-bullet"></i>gaming</a><a href="tutorials?tag=sfml"><i class="icon-list-bullet"></i>sfml</a><a href="tutorials?tag=video+games"><i class="icon-list-bullet"></i>video games</a>		</div>
		<div class="markdown">
			<p><em>Get started with this tutorial series <a href="https://www.binpress.com/tutorial/creating-a-city-building-game-with-sfml/137">here</a>!</em></p>

<p>Let's begin! The core of almost any game is a state manager, which unsurprisingly handles each of the states the game can be in (e.g. the main menu, the game world, or the options menu). By using a state manager we can nicely partition the game into these states, instead of them just being nice logical blocks that remain solely in our head. We will do this by creating a base <code>GameState</code> class which our actual states will inherit from, and then creating a <code>Game</code> class that will handle the changing of the states as well as storing the information that is universal to (almost) every state. Creating a <code>game_state.hpp</code> file then,</p>

<pre class="prettyprint"><code>#ifndef GAME_STATE_HPP
#define GAME_STATE_HPP

#include &quot;game.hpp&quot;

class GameState
{
    public:

    Game* game;

    virtual void draw(const float dt) = 0;
    virtual void update(const float dt) = 0;
    virtual void handleInput() = 0;
};

#endif /* GAME_STATE_HPP */</code></pre>

<p>Ignoring the <code>#include</code> for a non-existent file (we'll fix that soon) we have a small class definition. <code>game</code> is just a pointer back to the state manager mentioned earlier, the functions are the interesting part. They are all pure virtual functions and so are not defined within the <code>GameState</code> class; they must be overridden by an inherited class in order for them to be used. This is why we haven't defined or even declared a constructor, the compiler wouldn't allow you to create an instance of this class! The functions themselves are pretty self-explanatory, they'll just be called by the state manager in order to draw the state to the screen, update its logic, or handle its input. We've used virtual functions like this so that the state manager does not need to know what kind of state it has active, whatever kind it is (main menu, game world, or otherwise) it will just call the same functions.</p>

<p>Fixing that preemptive <code>#include</code>, create a <code>game.hpp</code> file.</p>

<pre class="prettyprint"><code>#ifndef GAME_HPP
#define GAME_HPP

#include &lt;stack&gt;
#include &lt;SFML/Graphics.hpp&gt;

class GameState;

class Game
{
    public:

    std::stack&lt;GameState*&gt; states;

    sf::RenderWindow window;

    void pushState(GameState* state);
    void popState();
    void changeState(GameState* state);
    GameState* peekState();

    void gameLoop();

    Game();
    ~Game();
};

#endif /* GAME_HPP */</code></pre>

<p>Here you might note that we have a bit of a loop with our class usage; <code>Game</code> needs to know about <code>GameState</code>, but <code>GameState</code> needs to know about <code>Game</code>! This would be a problem except for the little declaration of the <code>GameState</code> class within the file, which tells <code>Game</code> about <code>GameState</code>'s existence and allows us to include <code>game.hpp</code> in <code>game_state.hpp</code> and fix the cycle! Looking in the class itself, there's an <code>std::stack</code> data structure for storing the states and a few helper functions to push and pop states to and from the stack. We then have the <code>gameLoop</code> function, which will act much like <code>main</code> in our program. This is purely a design decision, the game loop (which will call those virtual functions) could be placed in <code>main</code> if you wanted. We then have a simple constructor and destructor and finally, our first bit of SFML code! Well, if you count a variable declaration of course... As the name implies <code>window</code> is just the window that our game will be drawn in. With the header file defined, let's create the source file for the <code>Game</code> class, <code>game.cpp</code></p>

<pre class="prettyprint"><code>#include &lt;stack&gt;

#include &lt;SFML/Graphics.hpp&gt;
#include &lt;SFML/System.hpp&gt;

#include &quot;game.hpp&quot;
#include &quot;game_state.hpp&quot;

void Game::pushState(GameState* state)
{
    this-&gt;states.push(state);

    return;
}

void Game::popState()
{
    delete this-&gt;states.top();
    this-&gt;states.pop();

    return;
}

void Game::changeState(GameState* state)
{
    if(!this-&gt;states.empty())
        popState();
    pushState(state);

    return;
}

GameState* Game::peekState()
{
    if(this-&gt;states.empty()) return nullptr;
    return this-&gt;states.top();
}

void Game::gameLoop()
{
    sf::Clock clock;

    while(this-&gt;window.isOpen())
    {
        sf::Time elapsed = clock.restart();
        float dt = elapsed.asSeconds();

        if(peekState() == nullptr) continue;
        peekState()-&gt;handleInput();
        peekState()-&gt;update(dt);
        this-&gt;window.clear(sf::Color::Black);
        peekState()-&gt;draw(dt);
        this-&gt;window.display();
    }
}

Game::Game()
{
    this-&gt;window.create(sf::VideoMode(800, 600), &quot;City Builder&quot;);
    this-&gt;window.setFramerateLimit(60);
}

Game::~Game()
{
    while(!this-&gt;states.empty()) popState();
}</code></pre>

<p>The state changing functions are all similar and simple; <code>pushState</code> takes a pointer to a <code>GameState</code> (or one of its derived classes) and pushes it on to the state stack, <code>popState</code> removes the top state from the stack, <code>changeState</code> pops the previous state (if there was one) and then pushes the new one on, and finally <code>peekState</code> returns a pointer to whatever state is on top of the stack. But why do we use a stack, and not just a <code>currentState</code> pointer, or similar? Well with a stack we can add new states over the top of existing ones whilst still keeping track of the old one, so we could add a pause game state which can be removed when the game is unpaused, but which keeps the progress of the game itself! Very handy, and I think worth the few extra lines it takes. The destructor is also state related, and just deletes all the states on the stack. Because of this, any states the state manager handles should be allocated using <code>new</code>.</p>

<p>Finally we get into some 'proper' SFML code! In the constructor we create a new render window (<code>sf::Window</code> cannot be drawn to, so we use <code>sf::RenderWindow</code> instead) which is 800 pixels wide, 600 pixels high, and is named &quot;City Builder&quot; (creativity is not my strong suit...). We then cap the framerate to 60fps, to stop the game from running too fast and eating too many cpu cycles!</p>

<p>Now let's look at the <code>gameloop</code> function. Our game will use a variable timestep, here called <code>dt</code>, in order to make everything work at a smooth rate. There are many different ways of controlling the speed of the logic in a program, but since we want time to progress at the same rate inside the game, regardless of the framerate, we will use this method. (We could just assume that the game was running at 60fps, but that's not a very safe assumption.) It works by starting a timer at the beginning of each frame, and stopping it at the end, before storing the time elapsed inside a timestep variable. This is then passed to any functions that need to know the speed of the game. So if we want a ball to move at 100 pixels per second, and the frame took 0.1 seconds, then the ball needs to move 10 pixels this frame. If the next frame takes twice as long, the ball should move twice as far. <code>clock.restart</code> conveniently returns the time since <code>clock</code> started, so we can combine the stopping and starting into one line. We then use the virtual functions that we defined earlier, making sure that we clear the screen before drawing the new one and updating the window.</p>

<p>We have one more file to define for now, <code>main.cpp</code>! It'll be rather simple (our simplest file even) since the heavy lifting is done by the <code>Game</code> class</p>

<pre class="prettyprint"><code>#include &quot;game.hpp&quot;

int main()
{
    Game game;

    game.gameLoop();

    return 0;
}</code></pre>

<p>Make the state manager, and then start the loop, trivial! We'll be back later to add another line or too, but for now we've finished our state manager! If you run the program, an empty window should appear, but sadly you'll have to close the poor thing using a task manager or equivalent -- hitting close will do nothing until we actually create a state!</p>

<p><a href="https://github.com/Piepenguin1995/citybuilder">Source code for this section</a></p>
		</div>
				<div class="related">
			<h2>Was this tutorial useful? Check out Action RPG Engine and Tutorial for iOS:</h2>
			<a class="thumb-link" href="app/action-rpg-engine-and-tutorial-for-ios/798"><img class="thumb" src="images/products/798/action-rpg-engine-and-tutorial-for-ios--thumb.png" alt="" /></a>
			<div class="summary"><p>Create your own RPG, RTS or action-adventure game. Includes a flexible RPG engine, complete example game project, a helpful ebook tutorial and a gigantic royalty-free art package.</p>
				<div class="rating"><span class="value-title" title="5"></span><ul title="Rating 5 out of 5"><li class="icon-star"></li><li class="icon-star"></li><li class="icon-star"></li><li class="icon-star"></li><li class="icon-star"></li></ul></div>			</div>
			<a class="button" href="app/action-rpg-engine-and-tutorial-for-ios/798">More <i class="icon-angle-right"></i></a>
		</div>
				<div class="series">
					<a class="next" href="tutorial/creating-a-city-building-game-with-sfml-part-2-the-first-state/124"><span class="book"></span> 
				<em>Creating a City Building Game with SFML Part 2: The First State</em>
								<small>4 comments</small>
							</a>
						<a class="prev" href="tutorial/working-with-json-and-pnacl-using-jsoncpp/110"><span class="book"></span> 
				<em>Working with JSON and PNaCl using jsoncpp</em>
								<small>2 comments</small>
							</a>
						
		</div>			
				<form class="subscribe-form" method="post" action="newsletter/signup">
			<img class="subscribe-icon" src="images/icons/subscribe-big.png" />
			<h3>Get new tutorials delivered to your Inbox</h3>
			<p>New tutorials will be sent to your Inbox once a week. You can unsubscribe at any time.</p>
			
			<input name="name" placeholder="Full name" type="text" class="text" /><input name="email" placeholder="Email" type="text" class="text" />			<input type="hidden" name="tutorial_id" value="123" />
			<button type="submit" class="red-button icon-plane">Subscribe</button>
			
		</form>
		<div class="eoa-links">
			<a class="button floater" href="content/write-for-us"><i class="icon-pencil"></i>Write for us!</a>
			<a class="red-button" href="tutorials"><i class="icon-book-open"></i>More Tutorials</a>
		</div>
		<div class="social-buttons">
	<span class="share-link socialb"><a rel="nofollow" href="http://www.binpress.com/tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123?slk"><em class="icon-link-1"></em><span class="counter">Link</span></a>
		<input type="text" value="http://www.binpress.com/tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123" readonly="readonly" class="text" />
	</span>
	<a rel="nofollow" class="socialb facebook" href="https://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123&t=Creating+a+City+Building+Game+with+SFML+Part+1%3A+State+Manager+-+Tutorial+-+" count-url="https%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123" target="_blank"><em class="icon-facebook"></em><span class="counter">Share</span></a>
	<a rel="nofollow" class="socialb twitter" href="https://twitter.com/intent/tweet?text=Creating+a+City+Building+Game+with+SFML+Part+1%3A+State+Manager+-+Tutorial+-+&url=http%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123" count-url="https%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123"><em class="icon-twitter"></em><span class="counter">Tweet</span></a>
	
	<a rel="nofollow" class="socialb linkedin" href="http://www.linkedin.com/shareArticle?mini=true&url=http%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123&title=Creating+a+City+Building+Game+with+SFML+Part+1%3A+State+ManagerTutorial&source=Binpress" count-url="https%3A%2F%2Fwww.binpress.com%2Ftutorial%2Fcreating-a-city-building-game-with-sfml-part-1-state-manager%2F123"><em class="icon-linkedin"></em><span class="counter">Share</span></a>

</div>		<div class="tutorial-comments">
	<a name="comments"></a>
	<h2>2 comments</h2>
	
		<div class="comment-form">
	
		<span class="avatar small"><img src="images/avatars/default-small.png" alt="" /></span>		
		<form method="post" action="tutorials/comment">
			<input type="hidden" name="return" value="tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123" />
			<input type="hidden" name="tutorial_id" value="123" />
			<input type="hidden" name="parent_id" />
			<input type="hidden" name="reply_to" />
			<textarea cols="50" rows="4" name="content"></textarea>
			<br />
			<div class="login">
	<small>Sign-in now</small>
	<a rel="nofollow" class="grey-button login-button" href="login?return=tutorial/creating-a-city-building-game-with-sfml-part-1-state-manager/123">Sign-in</a>
</div>
<div class="register">
	<small>Or enter your name and Email</small>
	<input name="name" placeholder="Full name" type="text" class="text" />
	<input name="email" placeholder="Email" type="email" class="text" />	
	<span class="cld"><input type="text" name="08c8e0" value="b1ce9d" /> <input type="text" name="f8a55c" /></span></div>
<button type="submit">Send</button>
			
		</form>

	</div>

			
		<ul class="comments inline" data-action="tutorials/savecomment">
		<li id="comment214">
	<a name="comment214"></a>
	<div class="wrapper">
			
		
		<input type="hidden" name="comment_id" value="214" />
				<a name="comment214"></a>
				<span class="avatar small color2"><img src="https://www.gravatar.com/avatar/a6a43b2a6e3b08c48ef6a2ec1ae0a5e7?s=48&amp;d=https://www.binpress.com/images/avatars/default-empty.gif" alt="" /><span>CS</span></span>		<span class="author">Chris Silver</span>
			
		
		<span class="time"><i class="icon-clock"></i>1 year ago</span>
				<blockquote class="comment">That's amazing, everything works. Thanks for it. You're great!</blockquote>
		
		
		<div class="actions">
						<a class="small-button grey-button reply icon-reply">Reply</a>
							
			<span class="right">
				<a class="icon-flag" rel="nofollow" href="app/flagcomment/id/214">Flag</a>
			</span>
		</div>
	</div>
		
	<ul class="replies">
		
		</ul>
	</li><li id="comment203">
	<a name="comment203"></a>
	<div class="wrapper">
			
		
		<input type="hidden" name="comment_id" value="203" />
				<a name="comment203"></a>
				<span class="avatar small color5"><img src="https://www.gravatar.com/avatar/49ffb8fe6d26507c61052dc2b84c85df?s=48&amp;d=https://www.binpress.com/images/avatars/default-empty.gif" alt="" /><span>VK</span></span>		<span class="author">Vlad Komarov</span>
			
		
		<span class="time"><i class="icon-clock"></i>1 year ago</span>
				<blockquote class="comment">I am doing a game, and used your screen manager code.
I don't understand, how i can Escape to menu from game process and back without losing process?</blockquote>
		
		
		<div class="actions">
						<a class="small-button grey-button reply icon-reply">Reply</a>
							
			<span class="right">
				<a class="icon-flag" rel="nofollow" href="app/flagcomment/id/203">Flag</a>
			</span>
		</div>
	</div>
		
	<ul class="replies">
		
		</ul>
	</li>		</ul>		
		
	</div>
	</div>	
		
</div>			<div class="clear" style="clear:both;"></div>
		</div>
		<div id="footer-push"></div>
	</div>
	<div id="footer">
	<div class="footer-top">
		<div class="width">
			<a href="content/about">About us</a>
			<a href="contact">Contact Us</a>
			<a href="page/terms">Terms & Conditions</a>
			<a href="page/privacy">Privacy Policy</a>
		</div>
	</div>
	<div class="width">

		<div class="col">
			<h3>Selling Digital Products</h3>
			<a href="features/store">Your Online Store</a>
			<a href="content/sell-software-online">Business Software</a>
			<a href="content/sell-games-online">Computer Games</a>
			<a href="content/sell-code-libraries">Source-Code Libraries</a>
			<a href="content/eu-vat-2015">EU VAT collection</a>
		</div>
		<div class="col">
			<h3>The Binpress Marketplace</h3>
			<a href="browse">Browse the marketplace</a>
			<a href="features/marketplace">Publish your products</a>
			<a href="content/guidelines">Publishing Guidelines</a>
			<a href="tutorials">Software Development Tutorials</a>
		</div>
		<div class="col">
			<h3>Learn More</h3>
			<a href="guides">Binpress Guides</a>
			<a href="blog">Blog</a>
			<a href="forum">Forum</a>
			<a href="content/faq">Frequently Asked Questions</a>
			<a href="dfp/start">Digital Fulfillment on your site</a>
		</div>

		<div class="social-profiles">
			<a class="icon-facebook social" href="https://www.facebook.com/binpress"></a>
			<a class="icon-twitter social" href="https://www.twitter.com/binpress"></a>
			<a class="icon-gplus social" href="https://plus.google.com/u/0/+Binpress/posts"></a>
			<a class="logo" href="/" title="Homepage - Binpress">Your own digital store</a>
		</div>

	</div>
</div>	<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script>!window.jQuery && document.write('<script src="js/jq/jquery.min.js"><\/script>')</script>
<script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js"></script>
<script>!window.jQuery.ui && document.write('<script src="js/jq/jquery-ui.min.js"><\/script>')</script>
<script type="text/javascript" src="/min/?b=js&amp;v=f319ecf&amp;f=binpress.js,media.js"></script>
<script type="text/javascript" src="/min/?b=js&amp;v=f319ecf&amp;f=prettify/prettify.js,site/tutorials.js,site/comments.js"></script>
		<!-- begin olark code --><script data-cfasync="false" type='text/javascript'>/*{literal}<![CDATA[*/
		window.olark||(function(c){var f=window,d=document,l=f.location.protocol=="https:"?"https:":"http:",z=c.name,r="load";var nt=function(){f[z]=function(){(a.s=a.s||[]).push(arguments)};var a=f[z]._={},q=c.methods.length;while(q--){(function(n){f[z][n]=function(){f[z]("call",n,arguments)}})(c.methods[q])}a.l=c.loader;a.i=nt;a.p={0:+new Date};a.P=function(u){a.p[u]=new Date-a.p[0]};function s(){a.P(r);f[z](r)}f.addEventListener?f.addEventListener(r,s,false):f.attachEvent("on"+r,s);var ld=function(){function p(hd){hd="head";return["<",hd,"></",hd,"><",i,' onl' + 'oad="var d=',g,";d.getElementsByTagName('head')[0].",j,"(d.",h,"('script')).",k,"='",l,"//",a.l,"'",'"',"></",i,">"].join("")}var i="body",m=d[i];if(!m){return setTimeout(ld,100)}a.P(1);var j="appendChild",h="createElement",k="src",n=d[h]("div"),v=n[j](d[h](z)),b=d[h]("iframe"),g="document",e="domain",o;n.style.display="none";m.insertBefore(n,m.firstChild).id=z;b.frameBorder="0";b.id=z+"-loader";if(/MSIE[ ]+6/.test(navigator.userAgent)){b.src="javascript:false"}b.allowTransparency="true";v[j](b);try{b.contentWindow[g].open()}catch(w){c[e]=d[e];o="javascript:var d="+g+".open();d.domain='"+d.domain+"';";b[k]=o+"void(0);"}try{var t=b.contentWindow[g];t.write(p());t.close()}catch(x){b[k]=o+'d.write("'+p().replace(/"/g,String.fromCharCode(92)+'"')+'");d.close();'}a.P(2)};ld()};nt()})({loader: "static.olark.com/jsclient/loader0.js",name:"olark",methods:["configure","extend","declare","identify"]});
			/* custom configuration goes here (www.olark.com/documentation) */
			olark.identify('3407-350-10-2744');/*]]>{/literal}*/</script><noscript><a href="https://www.olark.com/site/3407-350-10-2744/contact" title="Contact us" target="_blank">Questions? Feedback?</a> powered by <a href="http://www.olark.com?welcome" title="Olark live chat software">Olark live chat software</a></noscript><!-- end olark code --><script type="text/javascript">olark('api.visitor.updateCustomFields',{"visit_id":"6541776"});</script><script type="text/javascript">
adroll_adv_id = "2RIEOSPSWNCFZOUITXIIM7";
adroll_pix_id = "X4QCHJ7ZUBFSTP7ACJ34TI";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
</script>
<script type="text/javascript">
  maxmind_user_id = "62188";
  (function() {
    var mt = document.createElement('script'); mt.type = 'text/javascript'; mt.async = true;
    mt.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'device.maxmind.com/js/device.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(mt, s);
  })();
</script>
<script type="text/javascript">if(!NREUMQ.f){NREUMQ.f=function(){NREUMQ.push(["load",new Date().getTime()]);var e=document.createElement("script");e.type="text/javascript";e.src=(("http:"===document.location.protocol)?"http:":"https:")+"//"+"js-agent.newrelic.com/nr-100.js";document.body.appendChild(e);if(NREUMQ.a)NREUMQ.a();};NREUMQ.a=window.onload;window.onload=NREUMQ.f;};NREUMQ.push(["nrfj","bam.nr-data.net","7d8608a34f","3053298","YFdVYEsAVxdYAhAICVkddldNCFYKFhINFQMYRkJAVhNQBVUSSxMDVlY=",0,100,new Date().getTime(),"","","","",""]);</script></body>
</html>